#include <gtest/gtest.h>
#include <iostream>
#include "../include/gost_34_12_magma_dynamic.h"

#pragma comment(lib, "magma_dynamic.lib")

class TestMagmaDynamic : public ::testing::Test 
{
protected:
	void SetUp() {}
	void TearDown() {}
};

TEST_F(TestMagmaDynamic, test_encryption)
{
	uint8_t key[32] = { 0xff, 0xfe, 0xfd, 0xfc, 0xfb, 0xfa, 0xf9, 0xf8, 0xf7, 0xf6, 0xf5, 0xf4, 0xf3, 0xf2, 0xf1, 0xf0, 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff };
	uint64_t test_block = 0xfedcba9876543210;
	EXPECT_TRUE(encrypt(key, test_block) == 0x4ee901e5c2d8ca3d);
}

TEST_F(TestMagmaDynamic, test_decryption)
{
	uint8_t key[32] = { 0xff, 0xfe, 0xfd, 0xfc, 0xfb, 0xfa, 0xf9, 0xf8, 0xf7, 0xf6, 0xf5, 0xf4, 0xf3, 0xf2, 0xf1, 0xf0, 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff };
	uint64_t test_block = 0x4ee901e5c2d8ca3d;
	EXPECT_TRUE(decrypt(key, test_block) == 0xfedcba9876543210);
}

int main(int argc, char *argv[])
{
	::testing::InitGoogleTest(&argc, argv);
	return RUN_ALL_TESTS();
}